[{"path":"https://dschuhmacher.github.io/kanjistat/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to kanjistat","title":"Contributing to kanjistat","text":"can contribute kanjistat reporting problems, helping improve user experience adding new functionality data. Generally speaking, contribution related statistical aspects Japanese kanji (possibly hiragana/katakana) welcome. Functionality targets aspects Japanese language, tokenization word level analysis texts, probably better placed elsewhere. following gives guidelines contributions. largely taken tidyverse collection packages, kanjistat package follows (somewhat less strict) tidyverse philosophy.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/CONTRIBUTING.html","id":"smaller-changes","dir":"","previous_headings":"","what":"Smaller changes","title":"Contributing to kanjistat","text":"can fix typos, spelling mistakes grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to kanjistat","text":"want make bigger change, usually good idea file issue first make sure sufficient need interest suggestion. Sometimes another way things already place might negative effect existing code aware . ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to kanjistat","text":"Fork package clone onto computer. can done conveniently R via usethis::create_from_github(\"dschuhmacher/kanjistat\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). R, can say usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to kanjistat","text":"New code follow tidyverse style guide. use roxygen2 Markdown syntax documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/CONTRIBUTING.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributing to kanjistat","text":"guidelines adapted tidyverse collection, mostly purrr.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"gnu-general-public-license","dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"NA","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"NA","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"NA","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"NA","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"NA","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"NA","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"NA","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"NA","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"NA","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"NA","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"NA","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"NA","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"NA","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"NA","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"NA","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License.","title":"NA","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"NA","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"NA","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"NA","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"NA","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"NA","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c' for details."},{"path":"https://dschuhmacher.github.io/kanjistat/articles/kanjistat.html","id":"working-with-kanji-in-the-r-console","dir":"Articles","previous_headings":"","what":"Working with kanji in the R console","title":"Introduction to kanjistat","text":"Many functions kanjistat take “kanji” input. set Japanese input method system copy/paste characters somewhere (e.g., online dictionary), can pass kanji directly character object. Alternatively, can use kanji’s Unicode codepoint escape \\u four hex digits \\U general (eight hex digits). latter currently necessary 303 13108 kanji KANJIDIC2. Whether (rarer) kanji displayed correctly still depends whether console font supports corresponding character. can also use kanjistat functions codepointToKanji kanjiToCodepoint switch codepoint character.","code":"library(kanjistat) lookup(\"猫\")   #> 猫 --> ON: ビョウ | kun: ねこ | nanori:  #>        meaning: cat \"\\u732b\" #> [1] \"猫\" lookup(\"\\u732b\") #> 猫 --> ON: ビョウ | kun: ねこ | nanori:  #>        meaning: cat # \"\\u{26951}\" gives usually Error: invalid \\u{xxxx} sequence \"\\U26951\" #> [1] \"𦥑\" \"\\U00026951\" #> [1] \"𦥑\" codepointToKanji(\"26951\") #> [1] \"𦥑\" kanjiToCodepoint(\"猫\")   #> [1] \"732b\""},{"path":"https://dschuhmacher.github.io/kanjistat/articles/kanjistat.html","id":"kanji-data-included","dir":"Articles","previous_headings":"","what":"Kanji data included","title":"Introduction to kanjistat","text":"Kanjistat comes certain amount data kanji. tibbles kbase, kmorph list kreadmean provide basic information kanji, mostly KANJIDIC2 (see README.md sources). one several given kanji information easily retrieved via lookup function. Search selection kanji usual syntax data.frames tibbles. E.g.,","code":"lookup(\"猫\") #> 猫 --> ON: ビョウ | kun: ねこ | nanori:  #>        meaning: cat lookup(c(\"猫\",\"犬\"), \"basic\") #>      kanji unicode strokes   class grade kanken jlpt wanikani frank frank_news read_on #> 1305    猫    732b      11  jouyou     8  pre-2    2       15  1212       1702  ビョウ #> 77      犬    72ac       4 kyouiku     1     10    4        2   899       1326    ケン #>      read_kun mean #> 1305     ねこ  cat #> 77       いぬ  dog lookup(c(\"猫\",\"犬\"), \"morphologic\") #>      kanji strokes radical radvar nelson_c idc  components  skip mean #> 1305    猫      11      犬     犭     <NA> 品l 苗,田,犭,艹 1-3-8  cat #> 77      犬       4      犬   <NA>     <NA>  囗          大 4-4-4  dog kbase[kbase$strokes > 30,] #>       kanji unicode strokes   class grade kanken jlpt wanikani frank frank_news read_on #> 9756     籲    7c72      32 hyougai    11   <NA>   NA       NA    NA         NA      ユ #> 12052    鱻    9c7b      33 hyougai    11   <NA>   NA       NA    NA         NA    セン #> 12161    麤    9ea4      33 hyougai    11   <NA>   NA       NA    NA         NA      ソ #> 12243    龖    9f96      32 hyougai    11   <NA>   NA       NA    NA         NA    トウ #> 12244    龗    9f97      33 hyougai    11   <NA>   NA       NA    NA         NA    レイ #> 12706    䯂    4bc2      34 hyougai    11   <NA>   NA       NA    NA         NA    <NA> #> 12906    灩    7069      32 hyougai    11   <NA>   NA       NA    NA         NA    エン #>         read_kun               mean #> 9756       よ.ぶ             appeal #> 12052 あたらしい              fresh #> 12161  はな.れる              rough #> 12243  おそ.れる flight of a dragon #> 12244       かみ               <NA> #> 12706       <NA>           numerous #> 12906       なみ        overflowing  if (require(dplyr)) {   kbase %>% filter(strokes > 30) } #> # A tibble: 7 × 13 #>   kanji unicode   strokes class   grade kanken  jlpt wanikani frank frank_news read_on #>   <chr> <hexmode>   <int> <fct>   <int> <fct>  <int>    <int> <int>      <int> <chr>   #> 1 籲    7c72           32 hyougai    11 NA        NA       NA    NA         NA ユ      #> 2 鱻    9c7b           33 hyougai    11 NA        NA       NA    NA         NA セン    #> 3 麤    9ea4           33 hyougai    11 NA        NA       NA    NA         NA ソ      #> 4 龖    9f96           32 hyougai    11 NA        NA       NA    NA         NA トウ    #> 5 龗    9f97           33 hyougai    11 NA        NA       NA    NA         NA レイ    #> 6 䯂    4bc2           34 hyougai    11 NA        NA       NA    NA         NA NA      #> 7 灩    7069           32 hyougai    11 NA        NA       NA    NA         NA エン    #> # ℹ 2 more variables: read_kun <chr>, mean <chr>"},{"path":"https://dschuhmacher.github.io/kanjistat/articles/kanjistat.html","id":"getting-more-kanji-data","dir":"Articles","previous_headings":"","what":"Getting more kanji data","title":"Introduction to kanjistat","text":"--list package convenience functions reading common free kanji databases transforming data suitable R format. Except KanjiVG (see next section), implemented yet.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/articles/kanjistat.html","id":"kanji-data-types","dir":"Articles","previous_headings":"","what":"Kanji data types","title":"Introduction to kanjistat","text":"kanjistat introduces S3 classes kanjimat kanjivec store kanji bitmaps nested lists stroke paths, respectively. former produced user via function kanjimat, specifing font-family possibly parameters. latter may produced user via function kanjivec based data fantastic KanjiVG project. Jōyō kanji, also precompiled list available kanjistat.data repository, may convenient choice.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/articles/kanjistat.html","id":"working-with-japanese-fonts","dir":"Articles","previous_headings":"","what":"Working with Japanese fonts","title":"Introduction to kanjistat","text":"using Japanese script plots, either annotation, depict decomposition information producing bitmaps kanji, need tell kanjistat Japanese fonts installed computer. many free Japanese fonts available download, including https://www.freekanjifonts.com/, https://www.freejapanesefont.com/, https://github.com/fontworks-fonts. Common terms font styles Gothic (ゴシック, sans serif), Minchō (明朝, serif), Kyōkasho (教科書, school textbook). Sho (書) generally indicates handwriting style, three main calligraphy styles Kaisho (楷書, regular script), Gyōsho (行書, semi-cursiv script), Sōsho (草書, cursiv script). Sometimes kanji 体 (-tai, typeface) something else expressing style type added. Follow instructions operation system install favorite fonts. need make R aware , done via font management package sysfonts. function sysfonts::font_files() gives list fonts installed standard places operating system, list may little overwhelming sometimes misses fonts installed special places. useful tool finding path font know name systemfonts::match_font (sysfonts!). may add font sysfonts database. Since installed font families locations depend user’s operating system setup, remainder introduction displays console output plots author’s system. ⚠️ Adding fonts sysfont database effective end session. therefore advisable add font_add commands kanjistat profile file; see last section document. fonts sysfonts database, can use plots many ways like thanks package showtext. first obvious example plot annotation.  function plotkanji provides simple way depicting individual kanji graphics device.","code":"# Pregenerated output, run on the author's system. Your mileage may vary.  # Locate the free kaisho font by Nagayama Norio (previously installed) nagayama <- systemfonts::match_font(\"nagayama_kai\") nagayama #> $path #> [1] \"/Users/dschuhm/Library/Fonts/nagayama_kai08.otf\" #> #> $index #> [1] 0 #> #> $features #> NULL hsans <- systemfonts::match_font(\"Hiragino Sans\") hmincho <- systemfonts::match_font(\"Hiragino Mincho ProN\") yukyokasho <- systemfonts::match_font(\"YuKyokasho\")  # Add the font to the sysfonts database under the name given by `family` sysfonts::font_add(family = \"nagayama_kai\", regular=nagayama$path) sysfonts::font_add(family = \"hiragino_sans\", regular=hsans$path) sysfonts::font_add(family = \"hiragino_mincho\", regular=hmincho$path) sysfonts::font_add(family = \"yu_kyokasho\", regular=yukyokasho$path)  # Display the fonts families in the sysfonts database sysfonts::font_families() #> [1] \"sans\"            \"serif\"           \"mono\"            \"nagayama_kai\"    \"hiragino_sans\" #> [6] \"hiragino_mincho\" \"yu_kyokasho\" # Pregenerated output, run on the author's system. Your mileage may vary.  showtext::showtext_auto()  # give control for displaying text in plots to package `showtext` oldpar <- par(mai=c(0.8, 0.4, 0.8, 0.4))  # data petpercent <- c(11.1, 9.6, 3.5, 2.2, 1.6, 1.5, 1.4, 0.7, 0.6, 0.5, 0.4, 0.4, 0.3, 0.2, 0.1, 0.1, 0.5) petshort <- c(petpercent[1:7], sum(petpercent[8:17])) petnames <- c(\"犬\", \"猫\", \"メダカ\", \"金魚\", \"カメ\", \"小鳥\", \"熱帯魚\", \"その他\")  # plot and annotate barplot(petshort, las=1, col=\"darkolivegreen3\", # names.arg=petnames does not position nicely         main=\"ペット現在飼育状況 (2002年)\\n (Pet Ownership 2022 in Japan)\", family=\"hiragino_mincho\") mtext(petnames, side=1, line=0.35, at=-0.5 + 1.2*(1:8), family=\"hiragino_mincho\")   # bars have width 1 and space 0.2 mtext(\"%\", side=2, line=0.5, at=11, las=1, family=\"hiragino_mincho\") mtext(\"Source: ペットフード協会 (https://petfood.or.jp/data/)\", side=1, line=2,       family=\"hiragino_mincho\", cex=0.75)  par(oldpar) showtext::showtext_auto(enable = FALSE)  # give back control to the usual R code # Pregenerated output, run on the author's system. Your mileage may vary. plotkanji(rep(\"猫\",4), family=c(\"hiragino_sans\", \"hiragino_mincho\", \"yu_kyokasho\", \"nagayama_kai\"),           height=2)"},{"path":"https://dschuhmacher.github.io/kanjistat/articles/kanjistat.html","id":"kanjimat-objects","dir":"Articles","previous_headings":"","what":"kanjimat objects","title":"Introduction to kanjistat","text":"function kanjimat produces bitmap representation kanji specified font stored object class kanjimat along information.","code":"# Pregenerated output, run on the author's system. Your mileage may vary. fuji <- kanjimat(kanji=\"藤\", family=\"nagayama_kai\", size = 128) fuji #> Kanjimat representation of 藤 (Unicode 85e4) #> 128x128 bitmap in nagayama_kai font with 0 margin, antialiased str(fuji) #> List of 8 #>  $ char     : chr \"藤\" #>  $ hex      : 'hexmode' int 85e4 #>  $ padhex   : chr \"085e4\" #>  $ family   : chr \"nagayama_kai\" #>  $ size     : num 128 #>  $ margin   : num 0 #>  $ antialias: logi TRUE #>  $ matrix   : num [1:128, 1:128] 0 0 0 0 0 0 0 0 0 0 ... #>  - attr(*, \"call\")= chr \"kanjimat(kanji = \\\"藤\\\", family = \\\"nagayama_kai\\\", size = 128)\" #>  - attr(*, \"kanjistat_version\")=Classes 'package_version', 'numeric_version'  hidden list of 1 #>   ..$ : int [1:3] 0 8 0 #>  - attr(*, \"Rversion\")= chr \"R version 4.3.0 (2023-04-21)\" #>  - attr(*, \"platform\")= chr \"x86_64-apple-darwin20\" #>  - attr(*, \"png_type\")= chr \"cairo\" #>  - attr(*, \"class\")= chr \"kanjimat\" plot(fuji)"},{"path":"https://dschuhmacher.github.io/kanjistat/articles/kanjistat.html","id":"the-kanjistat-profile-file","dir":"Articles","previous_headings":"","what":"The kanjistat profile file","title":"Introduction to kanjistat","text":"kanjistat loaded, tries source file .Rkanjistat-profile, first current R working directory none found users home directory. file optional can helpful particular following three tasks: Adding fonts sysfonts database described duration current R session. , include lines form regular obtained systemfonts::match_font. Setting kanjistat options via kanjistat_options. Options mostly default choices various functions. options mentioned help function. Example: Loading kanji data. now, concerns mainly list pregenerated kanjivec objects obtained kanjistat.data repository. saving .rda file locally, load adding following line .Rkanjistat-profile","code":"sysfonts::font_add(family = \"nagayama_kai\", regular=\"/Users/dschuhm/Library/Fonts/nagayama_kai08.otf\") kanjistat_options(ask_github = TRUE, default_bitmap_size = 64, default_font = \"yu_kyokasho\") load(\"/path/to/the/data/kvec.rda\", envir = .GlobalEnv)"},{"path":"https://dschuhmacher.github.io/kanjistat/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dominic Schuhmacher. Author, maintainer. Lennart Finke. Author.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schuhmacher D, Finke L (2024). kanjistat: Statistical Framework Analysis Japanese Kanji Characters. R package version 0.11.0, https://dschuhmacher.github.io/kanjistat/.","code":"@Manual{,   title = {kanjistat: A Statistical Framework for the Analysis of Japanese Kanji Characters},   author = {Dominic Schuhmacher and Lennart Finke},   year = {2024},   note = {R package version 0.11.0},   url = {https://dschuhmacher.github.io/kanjistat/}, }"},{"path":"https://dschuhmacher.github.io/kanjistat/index.html","id":"kanjistat","dir":"","previous_headings":"","what":"A Statistical Framework for the Analysis of Japanese Kanji Characters","title":"A Statistical Framework for the Analysis of Japanese Kanji Characters","text":"kanjistat offers tools processing analyzing Japanese kanji characters. can look readings meanings along dictionary information (large part provided KANJIDIC2) including morphological details. can plot kanji favorite font process resulting bitmap. can represent kanji nested lists stroke paths (based original data kanjiVG), plot components different color display tree structure, analyze decompositions individual strokes. Various old new distance functions kanji implemented. Comments, suggestions contributions welcome!","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Statistical Framework for the Analysis of Japanese Kanji Characters","text":"Install directly GitHub saying R want use function kanjidist, install GNU Linear Programming Kit (R package ROI.plugin.glpk).","code":"remotes::install_github(\"dschuhmacher/kanjistat\")"},{"path":"https://dschuhmacher.github.io/kanjistat/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"A Statistical Framework for the Analysis of Japanese Kanji Characters","text":"Kanji represented three different ways package: characters (Unicode codepoints) console kanjimat objects, .e., bitmaps using certain font-family possibly typographical parameters. kanjivec objects, .e., nested lists strokes given paths. See vignette(\"kanjistat\") basics ?kanjivec ?kanjidist information third point. file kanjivec objects Jōyō kanji can obtained kanjistat.data repository.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"A Statistical Framework for the Analysis of Japanese Kanji Characters","text":"kanjistat free software: can redistribute /modify terms GNU General Public License published Free Software Foundation, either version 3 License, (option) later version. package distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See GNU General Public License details. copy GNU General Public License file LICENSE.md https://www.gnu.org/licenses/.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/index.html","id":"attribution-of-prior-work","dir":"","previous_headings":"","what":"Attribution of prior work","title":"A Statistical Framework for the Analysis of Japanese Kanji Characters","text":"code file R/svgparser_lite slightly altered R packagesvgparser v0.1.2 — Copyright © 2021 mikefc@coolbutuseless.com made available MIT License athttps://github.com/coolbutuseless/svgparser data sets kbase, kmorph kreadmean mostly derived KANJIDIC2 — Copyright © James William Breen Electronic Dictionary Research Development Group (EDRDG) made available CC -SA 4.0 License athttps://www.edrdg.org/wiki/index.php/KANJIDIC_Project variable components data set kmorph derived RADKFILE/KRADFILE — Copyright © James William Breen Electronic Dictionary Research Development Group (EDRDG) made available CC -SA 4.0 License athttps://www.edrdg.org/wiki/index.php/Main_Page variables jlpt, frank idc data sets kbase kmorph taken Kanjium — Copyright © Uros O. additions modifications previous sources made available CC -SA 4.0 License athttps://github.com/mifunetoshiro/kanjium data set fivebetas derived five svg files KanjiVG — Copyright (C) 2009-2023 Ulrich Apel made available CC -SA 3.0 License athttps://kanjivg.tagaini.net/085e4.svg 090f5.svg (included unit tests) exact copies files source","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/cjk_escape.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace CJK characters in files by escape sequences — cjk_escape","title":"Replace CJK characters in files by escape sequences — cjk_escape","text":"CJK characters file(s) found specified path substituted Unicode escape sequences (\\u + 4 digit hex number \\U + 8 digit hex number necessary).","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/cjk_escape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace CJK characters in files by escape sequences — cjk_escape","text":"","code":"cjk_escape(path, outdir = NULL, verbose = TRUE)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/cjk_escape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace CJK characters in files by escape sequences — cjk_escape","text":"path path directory single file. outdir directory output files written. Defaults subdirectory directory path. output files names originals. verbose whether print message output file.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/cjk_escape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace CJK characters in files by escape sequences — cjk_escape","text":"return value, called side effects.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/cjk_escape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace CJK characters in files by escape sequences — cjk_escape","text":"path directory, replacement performed files location (subdirectories ignored). outdir path, original files overwritten without warning. path file, replacement limited file. outdir dirname(path), files overwritten without warning.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/codepoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert between Unicode codepoint and kanji — codepoint","title":"Convert between Unicode codepoint and kanji — codepoint","text":"Given codepoints cp, function codepointToKanji transforms UTF-8, typically show actual character codepoints stands . Vice versa, given (UTF-8 encoded) kanjis kan, function kanjiToCodepoint transforms unicode codepoints.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/codepoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert between Unicode codepoint and kanji — codepoint","text":"","code":"codepointToKanji(cp, concat = FALSE)  kanjiToCodepoint(kan, character = FALSE)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/codepoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert between Unicode codepoint and kanji — codepoint","text":"cp vector character strings objects class hexmode, representing hexadecimal numbers. concat logical. Shall returned characters concatenated? kan vector kanjis (strings length 1) single string length >= 1 kanjis. character logical. Shall returned codepoints class \"character\" hexmode.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/codepoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert between Unicode codepoint and kanji — codepoint","text":"codepointToKanji character vector kanji. kanjiToCodepoint vector hexadecimal numbers (class hexmode).","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/codepoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert between Unicode codepoint and kanji — codepoint","text":"","code":"codepointToKanji(c(\"51b7\", \"6696\", \"71b1\")) #> [1] \"冷\" \"暖\" \"熱\" kanjiToCodepoint(\"冷暖熱\") #> [1] \"51b7\" \"6696\" \"71b1\""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/distdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Precomputed kanji distances — distdata","title":"Precomputed kanji distances — distdata","text":"Precomputed kanji distances","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/distdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precomputed kanji distances — distdata","text":"","code":"dstrokedit  dyehli"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/distdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Precomputed kanji distances — distdata","text":"Symmetric sparse matrices containing distances key kanji, ten nearest neighbors possibly close kanji. dstrokedit, stroke edit distances according Yencken Baldwin (2008). dyehli, bag--radicals distances according Yeh Li (2002). instance S4 class dsCMatrix (symmetric sparse matrices column-compressed format) 2133 rows 2133 columns. pre-2010 jouyou kanji also post-2010 jouyou kanji included. indices kbase.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/distdata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Precomputed kanji distances — distdata","text":"Datasets https://lars.yencken.org/datasets, made available Creative Commons Attribution 3.0 Unported licence. Computed part Yencken, Lars (2010) Orthographic support passing reading hurdle Japanese. PhD Thesis, University Melbourne, Melbourne, Australia.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/distdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Precomputed kanji distances — distdata","text":"Yeh, Su-Ling Li, Jing-Ling (2002). Role structure component judgements visual similarity Chinese characters. Journal Experimental Psychology: Human Perception Performance, 28(4), 933–947. Yencken, Lars, & Baldwin, Timothy (2008). Measuring predicting orthographic associations: Modelling similarity Japanese kanji. : Proceedings 22nd International Conference Computational Linguistics (Coling 2008), pp. 1041-1048.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/distdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precomputed kanji distances — distdata","text":"","code":"# Find index for kanji 部 bu_index <- match(\"部\", kbase$kanji)  # Look up available stroke edit distances for 部. non_zero <- which(dstrokedit[bu_index,] != 0) sed <- dstrokedit[non_zero, bu_index] names(sed) <- kbase[non_zero,]$kanji sort(sed) #>       郡       剖       度       章       席       痘       適       庫  #> 0.272727 0.272727 0.363636 0.363636 0.363636 0.416667 0.428571 0.454545  #>       常       竜       郊       歯       蛮       郭  #> 0.454545 0.454545 0.454545 0.500000 0.500000 0.545455   # Look up available bag-of-radicals distances for 部. non_zero <- which(dyehli[bu_index,] != 0) bord <- dyehli[non_zero, bu_index] names(bord) <- kbase[non_zero,]$kanji sort(bord) #>       陪       倍       剖       暗       位       泣       競       識  #> 0.000001 0.167000 0.167000 0.270000 0.270000 0.270000 0.278000 0.278000  #>       培       賠       辞       障       韻       接       粒       敵  #> 0.278000 0.278000 0.320000 0.320000 0.320000 0.333000 0.333000 0.355000  #>       摘       滴       嫡       端       傍       滝       隊       郭  #> 0.355000 0.355000 0.355000 0.383000 0.423000 0.423000 0.452000 0.452000  #>       険       邸  #> 0.500000 0.529000"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivebetas.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample list of kanjivec objects — fivebetas","title":"A sample list of kanjivec objects — fivebetas","text":"sample list kanjivec objects","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivebetas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample list of kanjivec objects — fivebetas","text":"","code":"fivebetas"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivebetas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample list of kanjivec objects — fivebetas","text":"fivebetas list five kanjivec objects representing basic kanji 部,障,陪,郵,陣 containing  \"beta\" components, come fact two different classical radicals: 阜-->⻖ left: mound, small village 邑-->⻏ right: large village","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivebetas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A sample list of kanjivec objects — fivebetas","text":"list generated function kanjivec parameter flatten=\"intelligent\" corresponding files KanjiVG database Ulrich Apel (https://kanjivg.tagaini.net/).","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivebetas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A sample list of kanjivec objects — fivebetas","text":"","code":"oldpar <- par(mfrow = c(1,5), mai = rep(0,4)) invisible( lapply(fivebetas, plot, seg_depth = 2) ) #> Warning: No components at seg_depth 2. Using components at seg_depth 1  par(oldpar)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivetrees.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample lists of kanjimat objects — fivetrees","title":"Sample lists of kanjimat objects — fivetrees","text":"Sample lists kanjimat objects","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivetrees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample lists of kanjimat objects — fivetrees","text":"","code":"fivetrees1  fivetrees2  fivetrees3"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivetrees.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample lists of kanjimat objects — fivetrees","text":"fivetrees1, fivetrees2 fivetrees3 lists five kanjimat objects , representing five basic kanji 校,木,休,林,相, containing tree component. matrices antialiased 64 x 64 pixel representations kanji. size chosen compromise aesthetics memory/computational cost, kmatdist. handwriting style fonts. fivetrees1 Kyoukasho font (schoolbook style), fivetrees2 Kaisho font (regular script calligraphy font), fivetrees3 Gyousho font (semi-cursive calligraphy font). object class list length 5. object class list length 5. object class list length 5.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivetrees.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample lists of kanjimat objects — fivetrees","text":"list generated function kanjimat using Mac OS pre-installed YuKyokasho font (fivetrees1), well freely available fonts nagayama_kai Norio Nagayama KouzanBrushFontGyousyo Aoyagi Kouzan.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/fivetrees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample lists of kanjimat objects — fivetrees","text":"","code":"oldpar <- par(mfrow = c(3,5)) invisible( lapply(fivetrees1, plot) ) invisible( lapply(fivetrees2, plot) ) invisible( lapply(fivetrees3, plot) )  par(oldpar)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the strokes of a kanjivec object — get_strokes","title":"Get the strokes of a kanjivec object — get_strokes","text":"strokes leaves kanjivec stroketree. consist two-column matrix giving discretized path stroke unit square \\([0,1]^2\\) attributes.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the strokes of a kanjivec object — get_strokes","text":"","code":"get_strokes(kvec, which = 1:kvec$nstrokes, simplify = TRUE)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the strokes of a kanjivec object — get_strokes","text":"kvec object class kanjivec numeric vector specifying numbers strokes returned. Defaults strokes. simplify logical. Shall stroke returned length 1?","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the strokes of a kanjivec object — get_strokes","text":"Usually list strokes attributes. Regardless whether ordered contains duplicates, returned list always contain strokes natural order without duplicates. length 1 simplified = TRUE, list avoided, single stroke returned.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the strokes of a kanjivec object — get_strokes","text":"","code":"kanji <- fivebetas[[5]] get_strokes(kanji, c(3,10))    # the two long vertical strokes in 陣 #> [[1]] #>            [,1]      [,2] #>  [1,] 0.1547706 0.8233945 #>  [2,] 0.1555799 0.8225476 #>  [3,] 0.1563384 0.8216777 #>  [4,] 0.1570479 0.8207852 #>  [5,] 0.1577098 0.8198706 #>  [6,] 0.1583259 0.8189344 #>  [7,] 0.1588977 0.8179772 #>  [8,] 0.1594269 0.8169993 #>  [9,] 0.1599151 0.8160014 #> [10,] 0.1603640 0.8149839 #> [11,] 0.1607752 0.8139473 #> [12,] 0.1611502 0.8128921 #> [13,] 0.1614907 0.8118188 #> [14,] 0.1617984 0.8107279 #> [15,] 0.1620748 0.8096199 #> [16,] 0.1623216 0.8084953 #> [17,] 0.1625405 0.8073545 #> [18,] 0.1627330 0.8061982 #> [19,] 0.1629007 0.8050267 #> [20,] 0.1630453 0.8038406 #> [21,] 0.1631685 0.8026404 #> [22,] 0.1632718 0.8014265 #> [23,] 0.1633568 0.8001995 #> [24,] 0.1634252 0.7989599 #> [25,] 0.1634787 0.7977081 #> [26,] 0.1635188 0.7964446 #> [27,] 0.1635471 0.7951701 #> [28,] 0.1635653 0.7938848 #> [29,] 0.1635751 0.7925895 #> [30,] 0.1635780 0.7912844 #> [31,] 0.1635780 0.7912844 #> [32,] 0.1635786 0.7892809 #> [33,] 0.1635805 0.7846608 #> [34,] 0.1635836 0.7775735 #> [35,] 0.1635877 0.7681684 #> [36,] 0.1635929 0.7565949 #> [37,] 0.1635991 0.7430024 #> [38,] 0.1636062 0.7275403 #> [39,] 0.1636141 0.7103582 #> [40,] 0.1636228 0.6916052 #> [41,] 0.1636321 0.6714310 #> [42,] 0.1636422 0.6499849 #> [43,] 0.1636527 0.6274162 #> [44,] 0.1636638 0.6038745 #> [45,] 0.1636753 0.5795091 #> [46,] 0.1636872 0.5544695 #> [47,] 0.1636993 0.5289050 #> [48,] 0.1637117 0.5029650 #> [49,] 0.1637242 0.4767991 #> [50,] 0.1637369 0.4505566 #> [51,] 0.1637495 0.4243869 #> [52,] 0.1637621 0.3984394 #> [53,] 0.1637746 0.3728635 #> [54,] 0.1637869 0.3478087 #> [55,] 0.1637990 0.3234243 #> [56,] 0.1638107 0.2998599 #> [57,] 0.1638221 0.2772647 #> [58,] 0.1638330 0.2557882 #> [59,] 0.1638434 0.2355798 #> [60,] 0.1638532 0.2167890 #> [61,] 0.1638532 0.2167890 #> [62,] 0.1638532 0.2119126 #> [63,] 0.1638532 0.2071559 #> [64,] 0.1638532 0.2025218 #> [65,] 0.1638532 0.1980137 #> [66,] 0.1638532 0.1936345 #> [67,] 0.1638532 0.1893873 #> [68,] 0.1638532 0.1852754 #> [69,] 0.1638532 0.1813018 #> [70,] 0.1638532 0.1774696 #> [71,] 0.1638532 0.1737819 #> [72,] 0.1638532 0.1702419 #> [73,] 0.1638532 0.1668527 #> [74,] 0.1638532 0.1636173 #> [75,] 0.1638532 0.1605390 #> [76,] 0.1638532 0.1576207 #> [77,] 0.1638532 0.1548657 #> [78,] 0.1638532 0.1522770 #> [79,] 0.1638532 0.1498578 #> [80,] 0.1638532 0.1476111 #> [81,] 0.1638532 0.1455401 #> [82,] 0.1638532 0.1436480 #> [83,] 0.1638532 0.1419377 #> [84,] 0.1638532 0.1404125 #> [85,] 0.1638532 0.1390754 #> [86,] 0.1638532 0.1379296 #> [87,] 0.1638532 0.1369781 #> [88,] 0.1638532 0.1362241 #> [89,] 0.1638532 0.1356708 #> [90,] 0.1638532 0.1353211 #> attr(,\"id\") #> [1] \"kvg:09663-s3\" #> attr(,\"type\") #> [1] \"㇑\" #> attr(,\"d\") #> [1] \"M16.87,19.25c0.88,0.88,0.96,2.12,0.96,3.5c0,0.68,0.02,43.62,0.03,62.62c0,5.2,0,8.62,0,8.88\" #>  #> [[2]] #>            [,1]       [,2] #>  [1,] 0.5959633 0.90247706 #>  [2,] 0.5969658 0.90144920 #>  [3,] 0.5979239 0.90041456 #>  [4,] 0.5988381 0.89937162 #>  [5,] 0.5997092 0.89831884 #>  [6,] 0.6005378 0.89725468 #>  [7,] 0.6013247 0.89617761 #>  [8,] 0.6020705 0.89508609 #>  [9,] 0.6027758 0.89397860 #> [10,] 0.6034414 0.89285360 #> [11,] 0.6040679 0.89170954 #> [12,] 0.6046561 0.89054490 #> [13,] 0.6052065 0.88935814 #> [14,] 0.6057199 0.88814773 #> [15,] 0.6061969 0.88691213 #> [16,] 0.6066383 0.88564981 #> [17,] 0.6070446 0.88435923 #> [18,] 0.6074166 0.88303885 #> [19,] 0.6077550 0.88168715 #> [20,] 0.6080604 0.88030259 #> [21,] 0.6083334 0.87888363 #> [22,] 0.6085749 0.87742874 #> [23,] 0.6087854 0.87593639 #> [24,] 0.6089657 0.87440503 #> [25,] 0.6091164 0.87283314 #> [26,] 0.6092381 0.87121918 #> [27,] 0.6093316 0.86956161 #> [28,] 0.6093976 0.86785890 #> [29,] 0.6094367 0.86610952 #> [30,] 0.6094495 0.86431193 #> [31,] 0.6094495 0.86431193 #> [32,] 0.6094515 0.85840836 #> [33,] 0.6094570 0.84877570 #> [34,] 0.6094660 0.83568663 #> [35,] 0.6094781 0.81941384 #> [36,] 0.6094930 0.80023002 #> [37,] 0.6095105 0.77840787 #> [38,] 0.6095303 0.75422006 #> [39,] 0.6095521 0.72793930 #> [40,] 0.6095757 0.69983827 #> [41,] 0.6096008 0.67018967 #> [42,] 0.6096271 0.63926618 #> [43,] 0.6096543 0.60734049 #> [44,] 0.6096822 0.57468530 #> [45,] 0.6097105 0.54157329 #> [46,] 0.6097390 0.50827715 #> [47,] 0.6097673 0.47506958 #> [48,] 0.6097952 0.44222327 #> [49,] 0.6098225 0.41001089 #> [50,] 0.6098488 0.37870516 #> [51,] 0.6098739 0.34857875 #> [52,] 0.6098974 0.31990435 #> [53,] 0.6099193 0.29295466 #> [54,] 0.6099391 0.26800237 #> [55,] 0.6099566 0.24532016 #> [56,] 0.6099715 0.22518073 #> [57,] 0.6099835 0.20785677 #> [58,] 0.6099925 0.19362097 #> [59,] 0.6099981 0.18274601 #> [60,] 0.6100000 0.17550459 #> [61,] 0.6100000 0.17550459 #> [62,] 0.6100000 0.17292205 #> [63,] 0.6100000 0.17016023 #> [64,] 0.6100000 0.16723819 #> [65,] 0.6100000 0.16417498 #> [66,] 0.6100000 0.16098964 #> [67,] 0.6100000 0.15770122 #> [68,] 0.6100000 0.15432878 #> [69,] 0.6100000 0.15089136 #> [70,] 0.6100000 0.14740800 #> [71,] 0.6100000 0.14389777 #> [72,] 0.6100000 0.14037970 #> [73,] 0.6100000 0.13687285 #> [74,] 0.6100000 0.13339627 #> [75,] 0.6100000 0.12996900 #> [76,] 0.6100000 0.12661010 #> [77,] 0.6100000 0.12333861 #> [78,] 0.6100000 0.12017359 #> [79,] 0.6100000 0.11713407 #> [80,] 0.6100000 0.11423912 #> [81,] 0.6100000 0.11150777 #> [82,] 0.6100000 0.10895908 #> [83,] 0.6100000 0.10661211 #> [84,] 0.6100000 0.10448588 #> [85,] 0.6100000 0.10259947 #> [86,] 0.6100000 0.10097191 #> [87,] 0.6100000 0.09962225 #> [88,] 0.6100000 0.09856955 #> [89,] 0.6100000 0.09783284 #> [90,] 0.6100000 0.09743119 #> attr(,\"id\") #> [1] \"kvg:09663-s10\" #> attr(,\"type\") #> [1] \"㇑\" #> attr(,\"d\") #> [1] \"M64.96,10.63c1.08,1.08,1.47,2.24,1.47,4.16c0,4.16,0.06,69.46,0.06,75.08c0,2.62,0,8.27,0,8.51\" #>"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes_compo.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the strokes of a specific component of a kanjivec object — get_strokes_compo","title":"Get the strokes of a specific component of a kanjivec object — get_strokes_compo","text":"strokes leaves kanjivec stroketree. consist two-column matrix giving discretized path stroke unit square \\([0,1]^2\\) attributes.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes_compo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the strokes of a specific component of a kanjivec object — get_strokes_compo","text":"","code":"get_strokes_compo(kvec, which = c(1, 1))"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes_compo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the strokes of a specific component of a kanjivec object — get_strokes_compo","text":"kvec object class kanjivec vector length 2 specifing index component, .e. component used pluck(kvec$components, !!!). default c(1,1) refers root component (full kanji), strokes returned.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes_compo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the strokes of a specific component of a kanjivec object — get_strokes_compo","text":"list strokes attributes.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/reference/get_strokes_compo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the strokes of a specific component of a kanjivec object — get_strokes_compo","text":"","code":"kanji <- fivebetas[[5]] # get the three strokes of the component⻖ in 陣 rad <- get_strokes_compo(kanji, c(2,1))     plot(0.5, 0.5, xlim=c(0,1), ylim=c(0,1), type=\"n\", asp=1, xaxs=\"i\", yaxs=\"i\", xlab=\"\", ylab=\"\") invisible(lapply(rad, lines, lwd=4))"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidata.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on kanji — kanjidata","title":"Data on kanji — kanjidata","text":"tibbles kbase kmorph provide basic morphologic information, respectively, kanji contained KANJIDIC2 file (see )","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data on kanji — kanjidata","text":"","code":"kbase  kmorph"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on kanji — kanjidata","text":"kbase tibble 13,108 rows 13 variables: kanji kanji unicode Unicode codepoint strokes number strokes class one four classes: \"kyouiku\", \"jouyou\", \"jinmeiyou\" \"hyougai\" grade number 1-11, basically finer version class, KANJIDIC2, except assgined 11 hyougaiji (rather NA value) kanken level kanji appears Nihon Kanji Nouryoku Kentei (Kanken) jlpt level kanji appears Japanese Language Proficiency Test (Nihongou Nouryoku Shiken) wanikani level kanji learned kanji learning website Wanikani frank frequency rank (1 = frequent) \"based several averages (Wikipedia, novels, newspapers, ...)\" frank_news frequency rank (1 = frequent) based news paper data (2501 frequent kanji four years Mainichi Shimbun) read_on, read_kun single reading katakana read_kun single kun reading hiragana mean single English meaning kanji kmorph tibble 13,108 rows 15 variables: kanji kanji strokes number strokes radical traditional (Kangxi) radical used indexing kanji (one 214) radvar variant radical different, otherwise NA nelson_c Nelson radical differs traditional one, otherwise NA idc ideographic description character (plus sometimes number letter) describing shape kanji components visible components kanji; originally KRADFILE skip kanji's SKIP code mean single English meaning kanji (kbase)","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data on kanji — kanjidata","text":"data directly KANJIDIC2 file. https://www.edrdg.org/wiki/index.php/KANJIDIC_Project Variables jlpt, frank, idc, components taken Kanjium data base https://github.com/mifunetoshiro/kanjium Variable components originally RADKFILE/KRADFILE. https://www.edrdg.org/) use data covered case Creative Commons -SA 4.0 License. See package's LICENSE file details copyright holders. Variable \"class\" derived \"grade\". Variable \"kanken\" compiled based Wikipedia description test levels (September 2022).","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data on kanji — kanjidata","text":"single kun readings single meaning easy identification difficult kanji. first entry KANJIDIC2 file may always important one. full readings/meanings use function lookup consult dictionary.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","title":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","text":"kanji distance based matching hierarchical component structures nesting-free way across levels. cost matching individual components cost registering components (.e. alligning position, scale aspect ratio) plus (relative unbalanced) Wasserstein distance registered components.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","text":"","code":"kanjidist(   k1,   k2,   compo_seg_depth1 = 3,   compo_seg_depth2 = 3,   p = 1,   C = 0.2,   type = c(\"rtt\", \"unbalanced\", \"balanced\", \"pc\", \"pcweighted\"),   size = 48,   lwd = 2.5,   verbose = FALSE )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","text":"k1, k2 two objects type kanjivec. compo_seg_depth1, compo_seg_depth2 two integers \\(\\geq 1\\). Specifies kanji deepest level included component matching. 1, kanji used. p order Wasserstein distance used matching components. distances penalty () taken p-th power (compensated taking p-th root summation). C penalty extra mass type \"rtt\" \"unbalanced\", .e. add  C^p per unit extra mass (applying p-th root). type type Wasserstein distance used matching components based bitmaps drawn stroke information k1 k2. \"unbalanced\" means pixel values two images interpreted mass. total masses can different. Extra mass can disposed cost C^p per unit. \"rtt\" computationally , final distance divided maximum total ink kanji (1/p). \"balanced\" means pixel values normalized images total mass 1. Everything transported, .e.\\ disposal mass allowed. \"pc\" computes points SVG maps . \"pcweighted\" additionally assigns weight proportional nearest neighbor point. size side length bitmaps used matching components. lwd linewidth drawing components bitmaps. verbose logical. Whether print detailed information cost pairs components final matching.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","text":"kanji distance, non-negative number.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","text":"precise definition details see reference . Parameter C corresponds \\(b/2^{1/p}\\) paper.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidist.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","text":"interface details function change future. Currently minimal set parameters can passed. parameters fixed exactly \"prototype distance\" (4.1) reference better worse. certain tendency exact matches components rather strongly favored (KanjiVG elements agree can overrule unbalanced Wasserstein distance) penalties translation/scaling/distortion components somewhat mild. computation time rather high (depending settings kanji several seconds per kanji pair). can alleviated somewhat keeping compo_seg_depth parameters 3 lower setting size = 32 (goes well lwd=1.8). Future versions use much faster line base optimal transport algorithm speed-ups.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","text":"Dominic Schuhmacher (2023). Distance maps Japanese kanji characters based hierarchical optimal transport. ArXiv Preprint, doi:10.48550/arXiv.2304.02493","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute distance between two kanjivec objects based on hierarchical optimal transport — kanjidist","text":"","code":"if (requireNamespace(\"ROI.plugin.glpk\")) {   kanjidist(fivebetas[[4]], fivebetas[[5]])   kanjidist(fivebetas[[4]], fivebetas[[5]], verbose=TRUE)   # faster and similar:   kanjidist(fivebetas[[4]], fivebetas[[5]], compo_seg_depth1=2, compo_seg_depth2=2,              size=32, lwd=1.8, verbose=TRUE)    # slower and similar:   kanjidist(fivebetas[[4]], fivebetas[[5]], size=64, lwd=3.2, verbose=TRUE) }  #> Loading required namespace: ROI.plugin.glpk #> [[1]] #> [[1]][[1]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #> 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.44659193  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #> 0.07491261 1.00000000 1.00000000 0.02808986 0.01027523 0.99614823 1.01739130  #>   distortx   distorty  #> 0.97912005 1.00000000  #> attr(,\"elements\") #> [1] \"郵\" \"陣\" #>  #> [[1]][[2]] #>     flatind1     flatind2       level1         ind1       level2         ind2  #>  1.000000000  2.000000000  1.000000000  1.000000000  2.000000000  1.000000000  #>      totcost         dist      weight1      weight2       transx       transy  #>  0.784655125  0.119777514  1.000000000  0.313539590 -0.242366644  0.003627086  #>       scalex       scaley     distortx     distorty  #>  0.278411206  0.904819766  0.307697971  1.000000000  #> attr(,\"elements\") #> [1] \"郵\" \"⻖\" #>  #> [[1]][[3]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #> 1.00000000 3.00000000 1.00000000 1.00000000 2.00000000 2.00000000 0.37410355  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #> 0.07238802 1.00000000 0.68646041 0.13166785 0.01027523 0.72127316 1.01739130  #>   distortx   distorty  #> 0.70894370 1.00000000  #> attr(,\"elements\") #> [1] \"郵\" \"車\" #>  #>  #> [[2]] #> [[2]][[1]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  1.00000000  2.00000000  1.00000000  1.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.42253813  0.07673603  0.63596141  1.00000000  0.17344037 -0.04693199  #>      scalex      scaley    distortx    distorty  #>  1.62168054  1.18936564  1.36348359  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"陣\" #>  #> [[2]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  2.00000000  2.00000000  1.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.73608926  0.11918274  0.63596141  0.31353959 -0.09701614 -0.05358014  #>      scalex      scaley    distortx    distorty  #>  0.45323981  1.05776562  0.42848794  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"⻖\" #>  #> [[2]][[3]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  3.00000000  2.00000000  1.00000000  2.00000000  2.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.21167340  0.05209631  0.63596141  0.68646041  0.27701835 -0.04693199  #>      scalex      scaley    distortx    distorty  #>  1.17419738  1.18936564  0.98724677  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"車\" #>  #>  #> [[3]] #> [[3]][[1]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  1.00000000  2.00000000  2.00000000  1.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.74031477  0.11324079  0.36403859  1.00000000 -0.22865325  0.04949527  #>      scalex      scaley    distortx    distorty  #>  3.12609719  1.12934319  2.76806663  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"陣\" #>  #> [[3]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  2.00000000  2.00000000  2.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.09672928  0.02541194  0.36403859  0.31353959 -0.49910976  0.04284713  #>      scalex      scaley    distortx    distorty  #>  0.87370581  1.00438448  0.86989178  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"⻖\" #>  #> [[3]][[3]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  3.00000000  2.00000000  2.00000000  2.00000000  2.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.71395276  0.11472293  0.36403859  0.68646041 -0.12507527  0.04949527  #>      scalex      scaley    distortx    distorty  #>  2.26348843  1.12934319  2.00425208  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"車\" #>  #>  #> [[4]] #> [[4]][[1]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #>  4.0000000  1.0000000  3.0000000  1.0000000  1.0000000  1.0000000  0.7793960  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #>  0.1320157  0.2008847  1.0000000  0.1784862 -0.0793578  1.9756156  1.3153950  #>   distortx   distorty  #>  1.5019182  1.0000000  #> attr(,\"elements\") #> [1] \"千\" \"陣\" #>  #> [[4]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  4.00000000  2.00000000  3.00000000  1.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.72281488  0.11865299  0.20088472  0.31353959 -0.09197027 -0.08600594  #>      scalex      scaley    distortx    distorty  #>  0.55216033  1.16985017  0.47199235  1.00000000  #> attr(,\"elements\") #> [1] \"千\" \"⻖\" #>  #> [[4]][[3]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #>  4.0000000  3.0000000  3.0000000  1.0000000  2.0000000  2.0000000  0.6703091  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #>  0.1107852  0.2008847  0.6864604  0.2820642 -0.0793578  1.4304684  1.3153950  #>   distortx   distorty  #>  1.0874820  1.0000000  #> attr(,\"elements\") #> [1] \"千\" \"車\" #>  #>  #> [[5]] #> [[5]][[1]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #>  5.0000000  1.0000000  3.0000000  2.0000000  1.0000000  1.0000000  0.8083822  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #>  0.1308616  0.1967095  1.0000000  0.1734404 -0.0409633  1.6216805  3.3620690  #>   distortx   distorty  #>  0.9325356  1.9333333  #> attr(,\"elements\") #> [1] \"g\"  \"陣\" #>  #> [[5]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  5.00000000  2.00000000  3.00000000  2.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.81186521  0.12740729  0.19670949  0.31353959 -0.09701614 -0.04761145  #>      scalex      scaley    distortx    distorty  #>  0.45323981  2.99006532  0.29305836  1.93333333  #> attr(,\"elements\") #> [1] \"g\"  \"⻖\" #>  #> [[5]][[3]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #>  5.0000000  3.0000000  3.0000000  2.0000000  2.0000000  2.0000000  0.7974040  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #>  0.1232692  0.1967095  0.6864604  0.2770183 -0.0409633  1.1741974  3.3620690  #>   distortx   distorty  #>  0.6752137  1.9333333  #> attr(,\"elements\") #> [1] \"g\"  \"車\" #>  #>  #> [[6]] #> [[6]][[1]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #> 6.000000000 1.000000000 3.000000000 3.000000000 1.000000000 1.000000000  #>     totcost        dist     weight1     weight2      transx      transy  #> 0.791288325 0.136493552 0.225647973 1.000000000 0.175825688 0.005499199  #>      scalex      scaley    distortx    distorty  #> 2.012543040 1.407404223 1.429968027 1.000000000  #> attr(,\"elements\") #> [1] \"土\" \"陣\" #>  #> [[6]][[2]] #>     flatind1     flatind2       level1         ind1       level2         ind2  #>  6.000000000  2.000000000  3.000000000  3.000000000  2.000000000  1.000000000  #>      totcost         dist      weight1      weight2       transx       transy  #>  0.826973335  0.153554807  0.225647973  0.313539590 -0.094630821 -0.001148944  #>       scalex       scaley     distortx     distorty  #>  0.562481086  1.251678832  0.449381320  1.000000000  #> attr(,\"elements\") #> [1] \"土\" \"⻖\" #>  #> [[6]][[3]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #> 6.000000000 3.000000000 3.000000000 3.000000000 2.000000000 2.000000000  #>     totcost        dist     weight1     weight2      transx      transy  #> 0.727305007 0.122611823 0.225647973 0.686460410 0.279403670 0.005499199  #>      scalex      scaley    distortx    distorty  #> 1.457206099 1.407404223 1.035385624 1.000000000  #> attr(,\"elements\") #> [1] \"土\" \"車\" #>  #>  #> Overview of matches: #>  #>   labfrom labto      costs    masses   masses1   masses2 #> 1      ⻏    ⻖ 0.09672928 0.3135396 0.3640386 0.3135396 #> 2      垂    車 0.21167340 0.6359614 0.6359614 0.6864604 #> Unmatched at cost 0.25: 0.050499 #>  #> Directly computed total cost based on this overview: 0.17756932132619 #> [[1]] #> [[1]][[1]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #> 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.43282427  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #> 0.07360803 1.00000000 1.00000000 0.02808986 0.01027523 0.99614823 1.01739130  #>   distortx   distorty  #> 0.97912005 1.00000000  #> attr(,\"elements\") #> [1] \"郵\" \"陣\" #>  #> [[1]][[2]] #>     flatind1     flatind2       level1         ind1       level2         ind2  #>  1.000000000  2.000000000  1.000000000  1.000000000  2.000000000  1.000000000  #>      totcost         dist      weight1      weight2       transx       transy  #>  0.780704076  0.118930021  1.000000000  0.313539590 -0.242366644  0.003627086  #>       scalex       scaley     distortx     distorty  #>  0.278411206  0.904819766  0.307697971  1.000000000  #> attr(,\"elements\") #> [1] \"郵\" \"⻖\" #>  #> [[1]][[3]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #> 1.00000000 3.00000000 1.00000000 1.00000000 2.00000000 2.00000000 0.36832288  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #> 0.07170271 1.00000000 0.68646041 0.13166785 0.01027523 0.72127316 1.01739130  #>   distortx   distorty  #> 0.70894370 1.00000000  #> attr(,\"elements\") #> [1] \"郵\" \"車\" #>  #>  #> [[2]] #> [[2]][[1]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  1.00000000  2.00000000  1.00000000  1.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.41301626  0.07560606  0.63596141  1.00000000  0.17344037 -0.04693199  #>      scalex      scaley    distortx    distorty  #>  1.62168054  1.18936564  1.36348359  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"陣\" #>  #> [[2]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  2.00000000  2.00000000  1.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.73097590  0.11810400  0.63596141  0.31353959 -0.09701614 -0.05358014  #>      scalex      scaley    distortx    distorty  #>  0.45323981  1.05776562  0.42848794  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"⻖\" #>  #> [[2]][[3]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  3.00000000  2.00000000  1.00000000  2.00000000  2.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.20487990  0.05112955  0.63596141  0.68646041  0.27701835 -0.04693199  #>      scalex      scaley    distortx    distorty  #>  1.17419738  1.18936564  0.98724677  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"車\" #>  #>  #> [[3]] #> [[3]][[1]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  1.00000000  2.00000000  2.00000000  1.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.73480196  0.11222037  0.36403859  1.00000000 -0.22865325  0.04949527  #>      scalex      scaley    distortx    distorty  #>  3.12609719  1.12934319  2.76806663  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"陣\" #>  #> [[3]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  2.00000000  2.00000000  2.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.09582504  0.02512123  0.36403859  0.31353959 -0.49910976  0.04284713  #>      scalex      scaley    distortx    distorty  #>  0.87370581  1.00438448  0.86989178  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"⻖\" #>  #> [[3]][[3]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  3.00000000  2.00000000  2.00000000  2.00000000  2.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.70976175  0.11392045  0.36403859  0.68646041 -0.12507527  0.04949527  #>      scalex      scaley    distortx    distorty  #>  2.26348843  1.12934319  2.00425208  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"車\" #>  #>  #> Overview of matches: #>  #>   labfrom labto      costs    masses   masses1   masses2 #> 1      ⻏    ⻖ 0.09582504 0.3135396 0.3640386 0.3135396 #> 2      垂    車 0.20487990 0.6359614 0.6359614 0.6864604 #> Unmatched at cost 0.25: 0.050499 #>  #> Directly computed total cost based on this overview: 0.17296540263549 #> [[1]] #> [[1]][[1]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #> 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.45376699  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #> 0.07559294 1.00000000 1.00000000 0.02808986 0.01027523 0.99614823 1.01739130  #>   distortx   distorty  #> 0.97912005 1.00000000  #> attr(,\"elements\") #> [1] \"郵\" \"陣\" #>  #> [[1]][[2]] #>     flatind1     flatind2       level1         ind1       level2         ind2  #>  1.000000000  2.000000000  1.000000000  1.000000000  2.000000000  1.000000000  #>      totcost         dist      weight1      weight2       transx       transy  #>  0.787058568  0.120301477  1.000000000  0.313539590 -0.242366644  0.003627086  #>       scalex       scaley     distortx     distorty  #>  0.278411206  0.904819766  0.307697971  1.000000000  #> attr(,\"elements\") #> [1] \"郵\" \"⻖\" #>  #> [[1]][[3]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #> 1.00000000 3.00000000 1.00000000 1.00000000 2.00000000 2.00000000 0.37875934  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #> 0.07293964 1.00000000 0.68646041 0.13166785 0.01027523 0.72127316 1.01739130  #>   distortx   distorty  #> 0.70894370 1.00000000  #> attr(,\"elements\") #> [1] \"郵\" \"車\" #>  #>  #> [[2]] #> [[2]][[1]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  1.00000000  2.00000000  1.00000000  1.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.42776207  0.07735700  0.63596141  1.00000000  0.17344037 -0.04693199  #>      scalex      scaley    distortx    distorty  #>  1.62168054  1.18936564  1.36348359  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"陣\" #>  #> [[2]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  2.00000000  2.00000000  1.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.73870009  0.11974420  0.63596141  0.31353959 -0.09701614 -0.05358014  #>      scalex      scaley    distortx    distorty  #>  0.45323981  1.05776562  0.42848794  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"⻖\" #>  #> [[2]][[3]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  2.00000000  3.00000000  2.00000000  1.00000000  2.00000000  2.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.21513288  0.05258259  0.63596141  0.68646041  0.27701835 -0.04693199  #>      scalex      scaley    distortx    distorty  #>  1.17419738  1.18936564  0.98724677  1.00000000  #> attr(,\"elements\") #> [1] \"垂\" \"車\" #>  #>  #> [[3]] #> [[3]][[1]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  1.00000000  2.00000000  2.00000000  1.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.74109286  0.11338660  0.36403859  1.00000000 -0.22865325  0.04949527  #>      scalex      scaley    distortx    distorty  #>  3.12609719  1.12934319  2.76806663  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"陣\" #>  #> [[3]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  2.00000000  2.00000000  2.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.09572261  0.02508803  0.36403859  0.31353959 -0.49910976  0.04284713  #>      scalex      scaley    distortx    distorty  #>  0.87370581  1.00438448  0.86989178  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"⻖\" #>  #> [[3]][[3]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  3.00000000  3.00000000  2.00000000  2.00000000  2.00000000  2.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.71596209  0.11511267  0.36403859  0.68646041 -0.12507527  0.04949527  #>      scalex      scaley    distortx    distorty  #>  2.26348843  1.12934319  2.00425208  1.00000000  #> attr(,\"elements\") #> [1] \"⻏\" \"車\" #>  #>  #> [[4]] #> [[4]][[1]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #>  4.0000000  1.0000000  3.0000000  1.0000000  1.0000000  1.0000000  0.7807105  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #>  0.1324087  0.2008847  1.0000000  0.1784862 -0.0793578  1.9756156  1.3153950  #>   distortx   distorty  #>  1.5019182  1.0000000  #> attr(,\"elements\") #> [1] \"千\" \"陣\" #>  #> [[4]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  4.00000000  2.00000000  3.00000000  1.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.72577322  0.11928183  0.20088472  0.31353959 -0.09197027 -0.08600594  #>      scalex      scaley    distortx    distorty  #>  0.55216033  1.16985017  0.47199235  1.00000000  #> attr(,\"elements\") #> [1] \"千\" \"⻖\" #>  #> [[4]][[3]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #>  4.0000000  3.0000000  3.0000000  1.0000000  2.0000000  2.0000000  0.6729803  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #>  0.1112626  0.2008847  0.6864604  0.2820642 -0.0793578  1.4304684  1.3153950  #>   distortx   distorty  #>  1.0874820  1.0000000  #> attr(,\"elements\") #> [1] \"千\" \"車\" #>  #>  #> [[5]] #> [[5]][[1]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #>  5.0000000  1.0000000  3.0000000  2.0000000  1.0000000  1.0000000  0.8094450  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #>  0.1311689  0.1967095  1.0000000  0.1734404 -0.0409633  1.6216805  3.3620690  #>   distortx   distorty  #>  0.9325356  1.9333333  #> attr(,\"elements\") #> [1] \"g\"  \"陣\" #>  #> [[5]][[2]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #>  5.00000000  2.00000000  3.00000000  2.00000000  2.00000000  1.00000000  #>     totcost        dist     weight1     weight2      transx      transy  #>  0.81393038  0.12795289  0.19670949  0.31353959 -0.09701614 -0.04761145  #>      scalex      scaley    distortx    distorty  #>  0.45323981  2.99006532  0.29305836  1.93333333  #> attr(,\"elements\") #> [1] \"g\"  \"⻖\" #>  #> [[5]][[3]] #>   flatind1   flatind2     level1       ind1     level2       ind2    totcost  #>  5.0000000  3.0000000  3.0000000  2.0000000  2.0000000  2.0000000  0.7989914  #>       dist    weight1    weight2     transx     transy     scalex     scaley  #>  0.1236453  0.1967095  0.6864604  0.2770183 -0.0409633  1.1741974  3.3620690  #>   distortx   distorty  #>  0.6752137  1.9333333  #> attr(,\"elements\") #> [1] \"g\"  \"車\" #>  #>  #> [[6]] #> [[6]][[1]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #> 6.000000000 1.000000000 3.000000000 3.000000000 1.000000000 1.000000000  #>     totcost        dist     weight1     weight2      transx      transy  #> 0.792221398 0.136810726 0.225647973 1.000000000 0.175825688 0.005499199  #>      scalex      scaley    distortx    distorty  #> 2.012543040 1.407404223 1.429968027 1.000000000  #> attr(,\"elements\") #> [1] \"土\" \"陣\" #>  #> [[6]][[2]] #>     flatind1     flatind2       level1         ind1       level2         ind2  #>  6.000000000  2.000000000  3.000000000  3.000000000  2.000000000  1.000000000  #>      totcost         dist      weight1      weight2       transx       transy  #>  0.828363169  0.154392617  0.225647973  0.313539590 -0.094630821 -0.001148944  #>       scalex       scaley     distortx     distorty  #>  0.562481086  1.251678832  0.449381320  1.000000000  #> attr(,\"elements\") #> [1] \"土\" \"⻖\" #>  #> [[6]][[3]] #>    flatind1    flatind2      level1        ind1      level2        ind2  #> 6.000000000 3.000000000 3.000000000 3.000000000 2.000000000 2.000000000  #>     totcost        dist     weight1     weight2      transx      transy  #> 0.727824582 0.122732560 0.225647973 0.686460410 0.279403670 0.005499199  #>      scalex      scaley    distortx    distorty  #> 1.457206099 1.407404223 1.035385624 1.000000000  #> attr(,\"elements\") #> [1] \"土\" \"車\" #>  #>  #> Overview of matches: #>  #>   labfrom labto      costs    masses   masses1   masses2 #> 1      ⻏    ⻖ 0.09572261 0.3135396 0.3640386 0.3135396 #> 2      垂    車 0.21513288 0.6359614 0.6359614 0.6864604 #> Unmatched at cost 0.25: 0.050499 #>  #> Directly computed total cost based on this overview: 0.179453784845399 #> [1] 0.1794538"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidistmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute distance matrix based on hierarchical optimal transport for lists of kanjivec objects — kanjidistmat","title":"Compute distance matrix based on hierarchical optimal transport for lists of kanjivec objects — kanjidistmat","text":"Individual distances based kanjidist.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidistmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute distance matrix based on hierarchical optimal transport for lists of kanjivec objects — kanjidistmat","text":"","code":"kanjidistmat(   klist,   klist2 = NULL,   compo_seg_depth = 3,   p = 1,   C = 0.2,   type = c(\"rtt\", \"unbalanced\", \"balanced\", \"pc\", \"pcweighted\"),   size = 48,   lwd = 2.5,   verbose = FALSE )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidistmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute distance matrix based on hierarchical optimal transport for lists of kanjivec objects — kanjidistmat","text":"klist list kanjimat objects. klist2 optional second list kanjimat objects. compo_seg_depth integer \\(\\geq 1\\). Specifies kanji deepest level included component matching. 1, kanji used. p, C, type, size, lwd, verbose function kanjidist.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidistmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute distance matrix based on hierarchical optimal transport for lists of kanjivec objects — kanjidistmat","text":"matrix dimension length(klist) x length(klist2) \\((,j)\\)-th entry distance klist[[]] klist2[[j]]. klist2 provided assumed equal klist, computation efficient upper triangular part computed symmetrized diagonal zero.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidistmat.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Compute distance matrix based on hierarchical optimal transport for lists of kanjivec objects — kanjidistmat","text":"precautions apply kanjidist.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjidistmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute distance matrix based on hierarchical optimal transport for lists of kanjivec objects — kanjidistmat","text":"","code":"# \\donttest{ kanjidistmat(fivebetas) #>            [,1]       [,2]       [,3]      [,4]       [,5] #> [1,] 0.00000000 0.15094547 0.07293262 0.1636467 0.20118739 #> [2,] 0.15094547 0.00000000 0.12190813 0.1880648 0.06598192 #> [3,] 0.07293262 0.12190813 0.00000000 0.1941102 0.17341509 #> [4,] 0.16364669 0.18806484 0.19411024 0.0000000 0.17756932 #> [5,] 0.20118739 0.06598192 0.17341509 0.1775693 0.00000000 # }"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjimat.html","id":null,"dir":"Reference","previous_headings":"","what":"Create kanjimat objects — kanjimat","title":"Create kanjimat objects — kanjimat","text":"Create (list ) kanjimat object(s), .e. bitmap representations kanji using certain font-family typographical parameters.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjimat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create kanjimat objects — kanjimat","text":"","code":"kanjimat(   kanji,   family = NULL,   size = NULL,   margin = 0,   antialias = TRUE,   save = FALSE,   overwrite = FALSE,   simplify = TRUE,   ... )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjimat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create kanjimat objects — kanjimat","text":"kanji (vector ) character string(s) containing kanji. family font-family used. details see vignette. size sidelength (square) bitmap margin numeric. Extra margin around character. Defaults 0 leaves relatively slim margin. Positive values increase margin, negative values decrease (usually cuts part kanji). antialias logical. Shall antialiasing performed? save logical character. FALSE return (list ) kanjimat object(s). Otherwise save result rds file working directory (kmatsave.rds) file path provided. overwrite logical. FALSE return error (computations done) designated file path already exists. Otherwise existing file overwritten. simplify logical. Shall single kanjimat object returned (instead list one) kanji single kanji? ... futher arguments passed png. extensibility. argument may currently used type. Trying change sizes, units, colors fonts argument results error undesirable output.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjimat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create kanjimat objects — kanjimat","text":"list objects class kanjimat , one kanji specified simplify TRUE, single objects class kanjimat. save = TRUE, (saved ) still returned invisibly.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjimat.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Create kanjimat objects — kanjimat","text":"font family provided, default Chinese font WenQuanYi Micro Hei comes package showtext used. means characters typically recognizable, quite often look odd Japanese characters. strongly advised Japanese font used detailed .","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjimat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create kanjimat objects — kanjimat","text":"","code":"res <- kanjimat(kanji=\"藤\", size = 128) #> Warning: No font family specified. Characters will be represented in the CJK font WenQuanYi Micro Hei #> that is included in the package showtext. The font targets Chinese writing and some strokes will #> therefore look odd for Japanese kanji. It is strongly advised that you register a Japanese font. #> See the package vignette for details. #> This warning is displayed once every 8 hours."},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjivec.html","id":null,"dir":"Reference","previous_headings":"","what":"Create kanjivec objects from kanjivg data — kanjivec","title":"Create kanjivec objects from kanjivg data — kanjivec","text":"Create (list ) kanjivec object(s). object representation kanji tree strokes based .svg files KanjiVG database containing , derived information.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjivec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create kanjivec objects from kanjivg data — kanjivec","text":"","code":"kanjivec(   kanji,   database = NULL,   flatten = \"intelligent\",   save = FALSE,   overwrite = FALSE,   simplify = TRUE )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjivec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create kanjivec objects from kanjivg data — kanjivec","text":"kanji (vector ) character string(s) one several kanji. database path local copy (subset ) KanjiVG database. expected svg files reside exact location (subdirectory). NULL, attempt made read svg file(s) KanjiVG GitHub repository (prompting confirmation, can switched via option ask_github). flatten logical. nodes -children fused parents? Alternatively one strings \"intelligent\", \"inner\" \"leaves\". Although first default experimental precise meaning change future; see details. save logical character. FALSE return (list ) kanjivec object(s). Otherwise save result rds file working directory (kvecsave.rds) file path provided. overwrite logical. FALSE return error (computations done) designated file path already exists. Otherwise existing file overwritten. simplify logical. Shall single kanjivec object returned (instead list one) kanji single kanji?","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjivec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create kanjivec objects from kanjivg data — kanjivec","text":"list objects class kanjivec , one kanji specified simplify TRUE, single objects class kanjivec. save = TRUE, (saved ) still returned invisibly.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjivec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create kanjivec objects from kanjivg data — kanjivec","text":"kanjivec object contains detailed information strokes individual kanji composed including order, segmentation reasonable components (\"radicals\" general sense word), classification individual strokes, vector data interpolated points recreate actual stroke Kyoukashou style font. information original data see http://kanjivg.tagaini.net/. data licenced Creative Commons -SA 3.0 (see licence file package). original .svg files sometimes contain additional <g> elements provide information current group strokes rather establishing new subgroup . happens typically information establishes coherence another part tree (noting current subgroup also part 2 something else), also variant information. option flatten = TRUE extra hierarchy level tree avoided, original information KanjiVG file kept. achieved fusing -children parents, giving new node name child attributes, prefixing p. attribute names parent (parents' \"names\" attribute discarded, can reconstructed parents' id). Removal several hierarchies sequence can lead attribute names multiple p. front. Fusing parents suppressed parent root hierarchy (typically one-stroke kanji), lead confusing results. options flatten = \"inner\" flatten = \"leaves\" implement behavior corresponding type node (inner nodes leaves). option flatten = \"intelligent\" tries find sophisticated ways flattening desirable (flatten rather conservatively). Currently nodes without element attribute one child flattened away (one example reasonable kanji kbase[187, ]), nodes element attribute one child child also inner node element part attribute parent, number (problematic component-building code particular case kanji kbase[1111, ]). kanjivec object components char kanji (single character) hex Unicode codepoint (integer class hexmode) padhex Unicode codepoint padded zeros five digits (mode character) family font data based. Currently \"schoolbook\" (extended \"kaisho\" point) nstrokes number strokes kanji ncompos vector number components depth tree nveins number veins component structure strokedend decomposition tree kanji object class dendrogram components component structure segmentation depth (components can overlap) terms KanjiVG elements depth-first tree coordinates veins veins component structure. vein represented two-column matrix lists rows indices components (starting root, component indexing c(1,1)) stroketree decomposition tree kanji, list containing full information KanjiVG file (except top level attributes) stroketree close representation KanjiVG svg file list object serious nesting sublists. XML attributes become attributes list elements. user usually look manipulate stroketree directly, strokedend compents derived functions may process . main differences svg file actual strokes given d-attributes describing Bézier curves also two-column matrices describing discretizations curves. matrices actual contents innermost lists stroketree, conveniently accessed via function get_strokes. positions stroke numbers (plotting) saved attribute strokenum_coords entire stroke tree rather separate element. strokedend easy examine work due various convenience functions dendrograms packages stats dendextend, including str plot.dendrogram. function plot.kanjivec option type = \"dend\" wrapper plot.dendrogram reasonable presets various options. label-attributes nodes strokedend taken element (inner nodes) type (leaves) attributes .svg files. consist UTF-8 characters representing kanji parts combination UTF-8 characters representing strokes may represent well CJK fonts (see details plot.kanjivec). element type missing .svg file, label assigned second part id-attribute, e.g. g5 s9. components given level can plotted, see plot.kanjivec type = \"kanji\". components veins serve mainly computation kanji distances.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kanjivec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create kanjivec objects from kanjivg data — kanjivec","text":"","code":"if (interactive()) {   # Try to load the svg file for the kanji from GitHub.   res <- kanjivec(\"藤\", database=NULL)   str(res) }  fivebetas  # sample kanjivec data #> $kvec090e8 #> Kanjivec representation of 部 (Unicode 90e8) #> 11 stroke vector graphics with depth 3 decomposition #>  #> $kvec0969c #> Kanjivec representation of 障 (Unicode 969c) #> 14 stroke vector graphics with depth 3 decomposition #>  #> $kvec0966a #> Kanjivec representation of 陪 (Unicode 966a) #> 11 stroke vector graphics with depth 3 decomposition #>  #> $kvec090f5 #> Kanjivec representation of 郵 (Unicode 90f5) #> 11 stroke vector graphics with depth 4 decomposition #>  #> $kvec09663 #> Kanjivec representation of 陣 (Unicode 9663) #> 10 stroke vector graphics with depth 1 decomposition #>  str(fivebetas[[1]]) #> 'kanjivec':\t11 components: #>  $ char      : chr \"部\" #>  $ hex       : 'hexmode' int 90e8 #>  $ padhex    : chr \"090e8\" #>  $ family    : chr \"schoolbook\" #>  $ nstrokes  : int 11 #>  $ ncompos   : num [1:4] 1 2 3 4 #>  $ nveins    : int 4 #>  $ strokedend:  ..--[dendrogram w/ 2 branches and 11 members at h = 4, label = 部] #>   ..  |--[dendrogram w/ 2 branches and 8 members at h = 3, label = 咅] #>   ..  |  |--[dendrogram w/ 2 branches and 5 members at h = 2, label = 立] #>   ..  |  |  |--[dendrogram w/ 2 branches and 2 members at h = 1, label = 亠] #>   ..  |  |  |  |--leaf \"㇑a\"  #>   ..  |  |  |  `--leaf \"㇐\"  #>   ..  |  |  `--[dendrogram w/ 3 branches and 3 members at h = 1, label = g4] #>   ..  |  |     |--leaf \"㇔\"  #>   ..  |  |     |--leaf \"㇒\"  #>   ..  |  |     `--leaf \"㇐\"  #>   ..  |  `--[dendrogram w/ 3 branches and 3 members at h = 2, label = 口] #>   ..  |     |--leaf \"㇑\" (h= 1  ) #>   ..  |     |--leaf \"㇕b\" (h= 1  ) #>   ..  |     `--leaf \"㇐b\" (h= 1  ) #>   ..  `--[dendrogram w/ 3 branches and 3 members at h = 3, label = ⻏] #>   ..     |--leaf \"㇇\" (h= 2  ) #>   ..     |--leaf \"㇁\" (h= 2  ) #>   ..     `--leaf \"㇑\" (h= 2  ) #>  $ components: (list of components organized by level) #>  $ veins: (list of component coordinates from root to last inner node) #>  $ stroketree: (nested list with original kanjivg info)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the unbalanced or balanced Wasserstein distance between two kanjimat objects — kmatdist","title":"Compute the unbalanced or balanced Wasserstein distance between two kanjimat objects — kmatdist","text":"gives dissimilarity pixel-images kanji based far mass (\"ink\") transported transform one image .","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the unbalanced or balanced Wasserstein distance between two kanjimat objects — kmatdist","text":"","code":"kmatdist(   k1,   k2,   p = 1,   C = 0.2,   type = c(\"unbalanced\", \"balanced\"),   output = c(\"dist\", \"all\") )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the unbalanced or balanced Wasserstein distance between two kanjimat objects — kmatdist","text":"k1, k2 two objects type kanjimat. p order Wasserstein distance. distances potential penalty taken p-th power (compensated taking p-th root summation). C penalty extra mass type=\"unbalanced\", .e. add  C^p per unit extra mass (applying p-th root). type type Wasserstein metric. \"unbalanced\" means pixel values two images interpreted mass. total masses can different. Extra mass can disposed cost C^p per unit. \"balanced\" means pixel values normalized images total mass 1. Everything transported, .e. disposal mass allowed. output requested output. See return value .","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the unbalanced or balanced Wasserstein distance between two kanjimat objects — kmatdist","text":"output = \"dist\", single non-negative number: unbalanced balanced Wasserstein distance kanji. output = \"\" list detailed information transport plan disposal pixel mass. See unbalanced details.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the unbalanced or balanced Wasserstein distance between two kanjimat objects — kmatdist","text":"","code":"res <- kmatdist(fivetrees1[[1]], fivetrees1[[5]], p=1, C=0.1, output=\"all\") plot(res, what=\"plan\", angle=20, lwd=1.5)   plot(res, what=\"trans\")  plot(res, what=\"extra\")  plot(res, what=\"inplace\")"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdistmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute distance matrix for lists of kanjimat objects — kmatdistmat","title":"Compute distance matrix for lists of kanjimat objects — kmatdistmat","text":"Apply kmatdist every pair kanjimat objects compute unbalanced balanced Wasserstein distance.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdistmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute distance matrix for lists of kanjimat objects — kmatdistmat","text":"","code":"kmatdistmat(   klist,   klist2 = NULL,   p = 1,   C = 0.2,   type = c(\"unbalanced\", \"balanced\") )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdistmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute distance matrix for lists of kanjimat objects — kmatdistmat","text":"klist list kanjimat objects. klist2 optional second list kanjimat objects. p, C, type function kmatdist.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdistmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute distance matrix for lists of kanjimat objects — kmatdistmat","text":"matrix dimension length(klist) x length(klist2) \\((,j)\\)-th entry distance klist[[]] klist2[[j]]. klist2 provided assumed equal klist, computation efficient upper triangular part computed symmetrized diagonal zero.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kmatdistmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute distance matrix for lists of kanjimat objects — kmatdistmat","text":"","code":"kmatdistmat(fivetrees1) #>          [,1]     [,2]     [,3]     [,4]     [,5] #> [1,]  0.00000 84.16072 57.59337 44.14622 44.49426 #> [2,] 84.16072  0.00000 69.80940 75.60980 86.55121 #> [3,] 57.59337 69.80940  0.00000 39.16901 66.16746 #> [4,] 44.14622 75.60980 39.16901  0.00000 44.66810 #> [5,] 44.49426 86.55121 66.16746 44.66810  0.00000 kmatdistmat(fivetrees1, fivetrees1)  # same result but slower #>          [,1]     [,2]     [,3]     [,4]     [,5] #> [1,]  0.00000 84.16072 57.59337 44.14622 44.49426 #> [2,] 84.16072  0.00000 69.80940 75.60980 86.55121 #> [3,] 57.59337 69.80940  0.00000 39.16901 66.16746 #> [4,] 44.14622 75.60980 39.16901  0.00000 44.66810 #> [5,] 44.49426 86.55121 66.16746 44.66810  0.00000 kmatdistmat(fivetrees1, fivetrees2)  # note the smaller values on the diagonal #>           [,1]     [,2]     [,3]     [,4]      [,5] #> [1,]  59.79662 84.09319 72.24528 76.97499  75.05534 #> [2,] 106.92515 58.29519 82.81458 93.28782 107.15642 #> [3,]  90.64552 90.41827 65.10304 82.02497  92.14198 #> [4,]  78.74045 88.73563 76.48978 67.54018  74.64072 #> [5,]  73.54473 88.44780 76.12515 72.28624  57.70252"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kreadmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Kanji readings and meanings — kreadmean","title":"Kanji readings and meanings — kreadmean","text":"Data set kanji readings meanings KANJIDIC2 dataset R list format. convenient access data use function lookup.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kreadmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kanji readings and meanings — kreadmean","text":"","code":"kreadmean"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kreadmean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Kanji readings and meanings — kreadmean","text":"object class list length 13108.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/kreadmean.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Kanji readings and meanings — kreadmean","text":"KANJIDIC2 file Jim Breen Electronic Dictionary Research Development Group (EDRDG)https://www.edrdg.org/wiki/index.php/KANJIDIC_Project use data covered Creative Commons -SA 4.0 License.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up kanji — lookup","title":"Look up kanji — lookup","text":"Return readings meanings information kbase kmorph.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up kanji — lookup","text":"","code":"lookup(kanji, what = c(\"readmean\", \"basic\", \"morphologic\"))"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up kanji — lookup","text":"kanji (vector ) character strings containing kanji. sort information display.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up kanji — lookup","text":"\"readmean\" information output cat return value (invisible NULL) cases appropriate subsets tables kbase kmorph returned","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Look up kanji — lookup","text":"basic interface quick lookup information based exact knowledge kanji (provided Japanese input method UTF-8 code). information based KANJIDIC2 file EDRDG (see thank page) Please use one many excellent online kanji dictionaries (see e.g.) sophisticated lookup methods detailed results.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/lookup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Look up kanji — lookup","text":"Dominic Schuhmacher schuhmacher@math.uni-goettingen.de","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/lookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up kanji — lookup","text":"","code":"lookup(c(\"晴\", \"曇\", \"雨\"))   #> 晴 --> ON: セイ | kun: は.れる, は.れ, は.れ-, -ば.れ, は.らす | nanori: はる, はれ #>        meaning: clear up #> 曇 --> ON: ドン | kun: くも.る | nanori: ど, ずみ #>        meaning: cloudy weather, cloud up #> 雨 --> ON: ウ | kun: あめ, あま-, -さめ | nanori:  #>        meaning: rain lookup(\"晴曇雨\")   # same #> 晴 --> ON: セイ | kun: は.れる, は.れ, は.れ-, -ば.れ, は.らす | nanori: はる, はれ #>        meaning: clear up #> 曇 --> ON: ドン | kun: くも.る | nanori: ど, ずみ #>        meaning: cloudy weather, cloud up #> 雨 --> ON: ウ | kun: あめ, あま-, -さめ | nanori:  #>        meaning: rain"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/options.html","id":null,"dir":"Reference","previous_headings":"","what":"Kanjistat Options — options","title":"Kanjistat Options — options","text":"Set examine global kanjistat options.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kanjistat Options — options","text":"","code":"kanjistat_options(...)  get_kanjistat_option(x)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kanjistat Options — options","text":"... number options specified name = value x name option given character string.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kanjistat Options — options","text":"kanjistat_options returns list set options function argument. Otherwise returns list old options. get_kanjistat_option returns current value set option x NULL option set.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjimat.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot kanjimat object — plot.kanjimat","title":"Plot kanjimat object — plot.kanjimat","text":"Plot kanjimat object","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjimat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot kanjimat object — plot.kanjimat","text":"","code":"# S3 method for kanjimat plot(   x,   mode = c(\"dark\", \"light\"),   col = gray(seq(0, 1, length.out = 256)),   ... )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjimat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot kanjimat object — plot.kanjimat","text":"x object class kanjimat. mode character string. \"dark\" original grayscale values used, \"light\" inverted. default grayscale color scheme kanji plotted white--black \"dark\" black--white \"light\". col vector colors. Typically 256 values enough keep full information (antialiased) kanjimat object. ... parameters passed image.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjimat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot kanjimat object — plot.kanjimat","text":"return value, called side effects.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjivec.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot kanjivec objects — plot.kanjivec","title":"Plot kanjivec objects — plot.kanjivec","text":"Plot kanjivec objects","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjivec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot kanjivec objects — plot.kanjivec","text":"","code":"# S3 method for kanjivec plot(   x,   type = c(\"kanji\", \"dend\"),   seg_depth = 0,   palette = \"Dark 3\",   pal.extra = 0,   numbers = FALSE,   offset = c(0.025, 0),   family = NULL,   lwd = 8,   ... )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjivec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot kanjivec objects — plot.kanjivec","text":"x object class kanjivec type either \"kanji\" \"dend\". Whether plot actual kanji, coloring strokes according levels segmentation, plot representation tree structure underlying segmentation. Among following named parameters, family use type = \"dend\"; others type = \"dend\". seg_depth integer. many steps segmentation hierarchy use different colors different groups. zero (default), one color used can specified col passed via ... usual palette valid name hcl palette (one hcl.pals()). Used coloring components seg_depth \\(>0\\). pal.extra integer. many extra colors picked specified palette. 0 (default), palette used many colors components. Since many hcl palettes run dark light colors, last () components may light. Increasing pal.extra makes component colors somewhat similar, last component darker. numbers logical. Shall stroke numbers displayed. offset (x,y)-offset numbers relative positions kanjivg saved kanjivec object. Either vector length 2 specifying fixed offset numbers matrix dimension kanjivec$nstrokes times 2. family font-family labeling nodes type = dend. See details. lwd usual line width graphics parameter. ... parameters passed lines type = \"kanji\" plot.dendrogram type = \"dend\".","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjivec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot kanjivec objects — plot.kanjivec","text":"return value, called side effects.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjivec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot kanjivec objects — plot.kanjivec","text":"Setting nice labels nodes type = \"dend\" easy. many font families appears \"kanji components\" displayed plots even help package showtext font contains glyphs corresponding codepoints display correctly text documents. concerns increasing severity problem Unicode blocks 2F00–2FDF (Kangxi Radicals), 2E80–2EFF (CJK Radicals Supplement) 31C0–31EF (CJK Strokes). strokes seems nearly impossible leaves simply annotated number strokes. user find suitable font pass via argument font family. default family = NULL first tries use default_font option set (via kanjistat_options) otherwise uses wqy-microhei, Chinese default font comes package showtext display radicals supplement. Mac experience \"hiragino_sans\" works well. addition issue font size currently judiciously set may large (especially -screen) devices. parameter cex (via ...) fixes .","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plot.kanjivec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot kanjivec objects — plot.kanjivec","text":"","code":"kanji <- fivebetas[[2]] plot(kanji, type = \"kanji\", seg_depth = 2)  plot(kanji, type = \"dend\")      # gives a warning if get_kanjistat_option(\"default_font\") is NULL"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plotkanji.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot kanji — plotkanji","title":"Plot kanji — plotkanji","text":"Write kanji graphics device.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plotkanji.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot kanji — plotkanji","text":"","code":"plotkanji(   kanji,   device = \"default\",   family = NULL,   factor = 10,   width = NULL,   height = NULL,   ... )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plotkanji.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot kanji — plotkanji","text":"kanji vector class character specifying one several kanji plotted. device type graphics device kanji plotted. Defaults user's default type according getOption(\"device\"). family font family families used writing kanji. Make sure add font(s) first using font_add; see details. family vector several font families matched characters kanji (possibly recycled). factor maginification factor applied font size (typically 12 points). width, height dimensions device. ... parameters passed function opening device (file name devices create file).","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plotkanji.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot kanji — plotkanji","text":"return value, called side effects.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plotkanji.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot kanji — plotkanji","text":"function writes one several kanji graphics device arbitrary font registered, .e., added database package sysfonts. latter say font_add font_families verify fonts available. information see Working Japanese fonts vignette(\"kanjistat\", package = \"kanjistat\"). plotkanji uses package showtext write kanji large font center new device specified type. specify device = \"current\" write kanji current device. now recommended simply use graphics::text combination showtext::showtext_auto instead.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plotkanji.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Plot kanji — plotkanji","text":"font family provided, default Chinese font WenQuanYi Micro Hei comes package showtext used. means characters typically recognizable, quite often look odd Japanese characters. strongly advised Japanese font used detailed .","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/plotkanji.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot kanji — plotkanji","text":"","code":"plotkanji(\"滝\")    plotkanji(\"犬猫魚\")"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/print.kanjivec.html","id":null,"dir":"Reference","previous_headings":"","what":"Print basic information about a kanjivec object — print.kanjivec","title":"Print basic information about a kanjivec object — print.kanjivec","text":"Print basic information kanjivec object","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/print.kanjivec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print basic information about a kanjivec object — print.kanjivec","text":"","code":"# S3 method for kanjivec print(x, dend = FALSE, ...)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/print.kanjivec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print basic information about a kanjivec object — print.kanjivec","text":"x object class kanjivec. dend whether print structure strokedend component. ... parameters passed print.default.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/print.kanjivec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print basic information about a kanjivec object — print.kanjivec","text":"return value, called side effects.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/read_kanjidic2.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a KANJIDIC2 file — read_kanjidic2","title":"Read a KANJIDIC2 file — read_kanjidic2","text":"Perform basic validity checks transform data standardized list keep object class xml_document (package xml2).","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/read_kanjidic2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a KANJIDIC2 file — read_kanjidic2","text":"","code":"read_kanjidic2(fpath = NULL, output = c(\"list\", \"xml\"))"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/read_kanjidic2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a KANJIDIC2 file — read_kanjidic2","text":"fpath path local KANJIDIC2 file. NULL (default) recent KANJIDIC2 file downloaded https://www.edrdg.org/kanjidic/kanjidic2.xml.gz asking confirmation. output one \"list\" \"xml\". desired type output.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/read_kanjidic2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a KANJIDIC2 file — read_kanjidic2","text":"output = \"xml\", exact XML document obtained xml2::read_xml. output = \"list\", list lists (individual kanji), following seven components. literal: single UTF-8 character representing kanji. codepoint: named character vector giving available codepoints unicode jis standards. radical: named numeric vector giving radical number(s), range 1 214. number named classical recorded KangXi Zidian (1716); number named nelson_c, kanji reclassified Nelson's Modern Reader's Japanese-English Character Dictionary (1962/74). misc: list six components grade: kanji grade level. 1 6 indicates kyouiku kanji grade kanji taught Japanese primary school. 8 indicates one remaining jouyou kanji learned junior high school, 9 10 jinmeiyou kanji. remaining (hyougai) kanji NA entry. stroke_count: stroke count kanji, including radical. one, first considered accepted count, subsequent ones common miscounts. variant: named character vector giving either cross-reference code another kanji, usually regarded variant, alternative indexing code current kanji. type variant given name. freq: frequency rank (1 = frequent) based newspaper data. NA among 2500 frequent. rad_name: character vector. kanji radical , name(s) radical (), otherwise length 0. jlpt: Japanese Language Proficiency Test level according old four-level system place 2010. value 4 (elementary) 1 (advanced). dic_number: named character vector (possibly length 0) giving index numbers (kanji letters attached) kanji various dictionaries, textbooks flashcard collections (specified name). Morohashi's Dai Kan-Wa Jiten, volume page number also provided format moro.VOL.PAGE. query_code: named character vector giving codes kanji various query systems (specified name). Halpern's SKIP code, possible misclassifications () kanji also noted format mis.skip.TYPE, TYPE indicates type misclassification. reading_meaning: (possibly empty) list containing zero rmgroup components creating groups readings meanings (practice never one rmgroup currently) well component nanori giving character vector (possibly length 0) readings associated names. rmgroup list entries: reading: (possibly empty) list entries named among pinyin, korean_r, korean_h, vietnam, ja_on ja_kun, containing character vector corresponding readings meaning: (possibly empty) list entries named two-letter (ISO 639-1) language codes, containing character vector corresponding meanings.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/read_kanjidic2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a KANJIDIC2 file — read_kanjidic2","text":"KANJIDIC2 contains detailed information 13108 kanji three main Japanese standards (JIS X 0208, 0212 0213). KANJIDIC files compiled maintained Jim Breen since 1991, help various people. copyright now held Electronic Dictionary Research Development Group (EDRDG). files made available Creative Commons -SA 4.0 license. See https://www.edrdg.org/wiki/index.php/KANJIDIC_Project details contents files license. output = \"xml\", minimal checks performed (high level structure total number kanji). output = \"list\", additional validity checks lower level structure performed. accordance file's Document Type Definition (DTD). additional check concern common patterns true current KANJIDIC2 file (December 2023) seem unlikely change near future. includes always one rmgroup entry reading_meaning. Informative warnings provided additional checks fail.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/reference/read_kanjidic2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a KANJIDIC2 file — read_kanjidic2","text":"","code":"if (interactive()) {   read_kanjidic2(\"kanjidic2.xml\") }"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/samplekan.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample kanji from a set — samplekan","title":"Sample kanji from a set — samplekan","text":"Sample kanji set","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/samplekan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample kanji from a set — samplekan","text":"","code":"samplekan(   set = c(\"kyouiku\", \"jouyou\", \"jinmeiyou\", \"kanjidic\"),   size = 1,   replace = FALSE,   prob = NULL )"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/samplekan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample kanji from a set — samplekan","text":"set character string specifying set kanjis sample . size positive number, number samples. replace logical. Sample replacement? prob currently without effect.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/samplekan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample kanji from a set — samplekan","text":"vector length size containing individual characters","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/samplekan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample kanji from a set — samplekan","text":"","code":"(sam <- samplekan(size = 10)) #>  [1] \"民\" \"火\" \"産\" \"系\" \"貴\" \"臣\" \"純\" \"結\" \"郵\" \"春\" #> attr(,\"index\") #>  [1] 460  63 485 870 879 559 927 452 998 201 lookup(sam) #> 民 --> ON: ミン | kun: たみ | nanori: ひと, み #>        meaning: people, nation, subjects #> 火 --> ON: カ | kun: ひ, -び, ほ- | nanori:  #>        meaning: fire #> 産 --> ON: サン | kun: う.む, う.まれる, うぶ-, む.す | nanori: もと #>        meaning: products, bear, give birth, yield, childbirth, native, property #> 系 --> ON: ケイ | kun:  | nanori:  #>        meaning: lineage, system #> 貴 --> ON: キ | kun: たっと.い, とうと.い, たっと.ぶ, とうと.ぶ | nanori: きよ, ぎ, たか, たかし, よし #>        meaning: precious, value, prize, esteem, honor #> 臣 --> ON: シン, ジン | kun:  | nanori: おみ, たか, と, とみ, み #>        meaning: retainer, subject #> 純 --> ON: ジュン | kun:  | nanori: あつ, すみ, み, やすし, よし #>        meaning: genuine, purity, innocence, net (profit) #> 結 --> ON: ケツ, ケチ | kun: むす.ぶ, ゆ.う, ゆ.わえる | nanori: ゆい, ゆう #>        meaning: tie, bind, contract, join, organize, do up hair, fasten #> 郵 --> ON: ユウ | kun:  | nanori:  #>        meaning: mail, stagecoach stop #> 春 --> ON: シュン | kun: はる | nanori: あずま, かす, すの, ひ, わら #>        meaning: springtime, spring (season)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/str.kanjivec.html","id":null,"dir":"Reference","previous_headings":"","what":"Compactly display the structure of a kanjivec object — str.kanjivec","title":"Compactly display the structure of a kanjivec object — str.kanjivec","text":"Compactly display structure kanjivec object","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/str.kanjivec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compactly display the structure of a kanjivec object — str.kanjivec","text":"","code":"# S3 method for kanjivec str(object, ...)"},{"path":"https://dschuhmacher.github.io/kanjistat/reference/str.kanjivec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compactly display the structure of a kanjivec object — str.kanjivec","text":"object object class kanjivec. ... parameters passed str stroketree component object.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/reference/str.kanjivec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compactly display the structure of a kanjivec object — str.kanjivec","text":"return value, called side effects.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"kanjistat-development-version","dir":"Changelog","previous_headings":"","what":"kanjistat (development version)","title":"kanjistat (development version)","text":"Lennart Finke now co-author.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"kanjistat (development version)","text":"Function kanjidist accepts two new type arguments “pc” “pcweighted” computing component distances based (weighted) point clouds rather bitmap images. Data sets dstrokedit dyehli added stroke edit Yeh-Li (bag--radicals) distances Jouyou kanji (usually bit ) closest ten neighbors. Based PhD thesis Lars Yencken (2010).","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"user-visible-changes-development-version","dir":"Changelog","previous_headings":"","what":"User visible changes","title":"kanjistat (development version)","text":"Previously, function kanjimat cut part kanji default setting marging = 0 Windows. algorithm setting effective margin bitmap representation improved.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"new-feature-0-10-0","dir":"Changelog","previous_headings":"","what":"New feature","title":"kanjistat 0.10.0 (2024-01-01)","text":"Function read_kanjidic2, reads KANJIDIC2 file converts list. kanji information original file retained, structure simplified.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"documentation-0-10-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"kanjistat 0.10.0 (2024-01-01)","text":"Add contribution guidelines.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"new-feature-0-9-0","dir":"Changelog","previous_headings":"","what":"New feature","title":"kanjistat 0.9.0 (2023-05-20)","text":"Add function cjk_escape, replaces CJK characters Unicode escape sequences files.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"documentation-0-9-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"kanjistat 0.9.0 (2023-05-20)","text":"Improve main package vignette make versatile.","code":""},{"path":[]},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"documentation-0-8-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"kanjistat 0.8.0 (2023-05-06)","text":"extensive readme file main package vignette. Add package website using pkgdown.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"improvements-0-8-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"kanjistat 0.8.0 (2023-05-06)","text":"Increase functionality plotkanji. function now plots several kanji possibly different fonts. parameter filename added devices plot file.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"minor-bug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"Minor bug fixes","title":"kanjistat 0.8.0 (2023-05-06)","text":"Add print.kanjivec() package exports.","code":""},{"path":"https://dschuhmacher.github.io/kanjistat/news/index.html","id":"kanjistat-070-2023-04-07","dir":"Changelog","previous_headings":"","what":"kanjistat 0.7.0 (2023-04-07)","title":"kanjistat 0.7.0 (2023-04-07)","text":"First public release.","code":""}]
